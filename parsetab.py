
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftISEQUALleftLTLEGTGEleftPLUSMINUSleftMULTIPLYDIVIDErightNOTAND CHAR DECREMENT DIVIDE DOUBLE GE GT INCREMENT INT ISEQUAL LE LPARAN LT MINUS MODULO MULTIPLY NOT NOTEQUAL OR PLUS POWER RPARAN STRING\n    exp : exp PLUS exp\n        | exp MINUS exp\n        | exp MULTIPLY exp\n        | exp DIVIDE exp\n        | exp MODULO exp\n        | exp POWER exp\n        | exp LE exp\n        | exp GE exp\n        | exp ISEQUAL exp\n        | exp NOTEQUAL exp\n        | exp LT exp\n        | exp GT exp\n        | exp AND exp\n        | exp OR expexp : LPARAN exp RPARANexp : NOT expexp : INTexp : DOUBLE'
    
_lr_action_items = {'LPARAN':([0,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'NOT':([0,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'INT':([0,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'DOUBLE':([0,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'$end':([1,4,5,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[0,-17,-18,-16,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,]),'PLUS':([1,4,5,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[6,-17,-18,6,-16,-1,-2,-3,-4,6,6,6,6,6,6,6,6,6,6,-15,]),'MINUS':([1,4,5,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[7,-17,-18,7,-16,-1,-2,-3,-4,7,7,7,7,7,7,7,7,7,7,-15,]),'MULTIPLY':([1,4,5,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[8,-17,-18,8,-16,8,8,-3,-4,8,8,8,8,8,8,8,8,8,8,-15,]),'DIVIDE':([1,4,5,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[9,-17,-18,9,-16,9,9,-3,-4,9,9,9,9,9,9,9,9,9,9,-15,]),'MODULO':([1,4,5,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[10,-17,-18,10,-16,-1,-2,-3,-4,10,10,-7,-8,-9,10,-11,-12,-13,-14,-15,]),'POWER':([1,4,5,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[11,-17,-18,11,-16,-1,-2,-3,-4,11,11,-7,-8,-9,11,-11,-12,-13,-14,-15,]),'LE':([1,4,5,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[12,-17,-18,12,-16,-1,-2,-3,-4,12,12,-7,-8,12,12,-11,-12,12,12,-15,]),'GE':([1,4,5,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[13,-17,-18,13,-16,-1,-2,-3,-4,13,13,-7,-8,13,13,-11,-12,13,13,-15,]),'ISEQUAL':([1,4,5,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[14,-17,-18,14,-16,-1,-2,-3,-4,14,14,-7,-8,-9,14,-11,-12,14,14,-15,]),'NOTEQUAL':([1,4,5,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[15,-17,-18,15,-16,-1,-2,-3,-4,15,15,-7,-8,-9,15,-11,-12,-13,-14,-15,]),'LT':([1,4,5,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[16,-17,-18,16,-16,-1,-2,-3,-4,16,16,-7,-8,16,16,-11,-12,16,16,-15,]),'GT':([1,4,5,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[17,-17,-18,17,-16,-1,-2,-3,-4,17,17,-7,-8,17,17,-11,-12,17,17,-15,]),'AND':([1,4,5,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[18,-17,-18,18,-16,-1,-2,-3,-4,18,18,-7,-8,-9,18,-11,-12,-13,18,-15,]),'OR':([1,4,5,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[19,-17,-18,19,-16,-1,-2,-3,-4,19,19,-7,-8,-9,19,-11,-12,-13,-14,-15,]),'RPARAN':([4,5,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[-17,-18,36,-16,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exp':([0,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,],[1,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> exp PLUS exp','exp',3,'p_exp_binop','parser.py',50),
  ('exp -> exp MINUS exp','exp',3,'p_exp_binop','parser.py',51),
  ('exp -> exp MULTIPLY exp','exp',3,'p_exp_binop','parser.py',52),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_binop','parser.py',53),
  ('exp -> exp MODULO exp','exp',3,'p_exp_binop','parser.py',54),
  ('exp -> exp POWER exp','exp',3,'p_exp_binop','parser.py',55),
  ('exp -> exp LE exp','exp',3,'p_exp_binop','parser.py',56),
  ('exp -> exp GE exp','exp',3,'p_exp_binop','parser.py',57),
  ('exp -> exp ISEQUAL exp','exp',3,'p_exp_binop','parser.py',58),
  ('exp -> exp NOTEQUAL exp','exp',3,'p_exp_binop','parser.py',59),
  ('exp -> exp LT exp','exp',3,'p_exp_binop','parser.py',60),
  ('exp -> exp GT exp','exp',3,'p_exp_binop','parser.py',61),
  ('exp -> exp AND exp','exp',3,'p_exp_binop','parser.py',62),
  ('exp -> exp OR exp','exp',3,'p_exp_binop','parser.py',63),
  ('exp -> LPARAN exp RPARAN','exp',3,'p_exp_paran','parser.py',67),
  ('exp -> NOT exp','exp',2,'p_exp_NOT','parser.py',71),
  ('exp -> INT','exp',1,'p_exp_int','parser.py',76),
  ('exp -> DOUBLE','exp',1,'p_exp_double','parser.py',80),
]
